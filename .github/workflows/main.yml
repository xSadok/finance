# Nome do fluxo de trabalho
name: Deploy to GitHub Pages

# Gatilho: roda toda vez que você atualizar a branch 'main'
on:
  push:
    branches: [ "main" ]

# Permissões necessárias para o robô funcionar
permissions:
  contents: read
  pages: write
  id-token: write

# Tarefas a serem executadas
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o código do seu repositório
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Substitui os placeholders pelas chaves secretas no arquivo index.html
      - name: Replace Firebase config
        run: |
          sed -i 's|__FIREBASE_API_KEY__|${{ secrets.FIREBASE_API_KEY }}|g' index.html
          sed -i 's|__FIREBASE_AUTH_DOMAIN__|${{ secrets.FIREBASE_AUTH_DOMAIN }}|g' index.html
          sed -i 's|__FIREBASE_PROJECT_ID__|${{ secrets.FIREBASE_PROJECT_ID }}|g' index.html
          sed -i 's|__FIREBASE_STORAGE_BUCKET__|${{ secrets.FIREBASE_STORAGE_BUCKET }}|g' index.html
          sed -i 's|__FIREBASE_MESSAGING_SENDER_ID__|${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}|g' index.html
          sed -i 's|__FIREBASE_APP_ID__|${{ secrets.FIREBASE_APP_ID }}|g' index.html
          sed -i 's|__FIREBASE_MEASUREMENT_ID__|${{ secrets.FIREBASE_MEASUREMENT_ID }}|g' index.html

      # 3. Prepara o arquivo para ser publicado
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      # 4. Publica o site
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
